package com.revature.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.revature.pojos.AccountType;
import com.revature.pojos.User;
import com.revature.util.ConnectionFactory;

public class userDao implements DAO<User, Integer> {

	@Override
	public List<User> findAll() {
		List<User> type = new ArrayList<User>();

		try (Connection conn = ConnectionFactory.getInstance().getConnection()) {
			String query = "SELECT BALANCE FROM ACCOUNT_TB WHERE USERID = ?";
			Statement statement = conn.createStatement();
			ResultSet rs = statement.executeQuery(query);
			while (rs.next()) {

				User temp = new User();
				temp.setTypeID(rs.getInt(1));
				temp.setType(rs.getString(2));
				type.add(temp);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return type;
	}

	@Override
	public User findById(Integer id) {
		User usr = null;
		try(Connection conn = ConnectionFactory.getInstance().getConnection()){
			
			String sql = "select * from bn_genre where genre_id = ? ";
			PreparedStatement ps = conn.prepareStatement(sql); 
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				usr = new User();
				usr.setFirstName(rs.getString(1));
				usr.setLastName(rs.getString(2));
				usr.setUserID(rs.getInt(3));
				usr.setPws(rs.getString(4));
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return usr;
	}

	@Override
	public User save(User obj) {
		try(Connection conn = ConnectionFactory.getInstance().getConnection()){
			conn.setAutoCommit(false);
			
			String sql = "INSERT INTO BN_GENRE (NAME) VALUES(?)";
			String[] keyNames = {"Genre_Id"};
			
			PreparedStatement ps = conn.prepareStatement(sql, keyNames);
			ps.setString(1, obj.getName());
			
			int numRows = ps.executeUpdate();
			if(numRows > 0) {
				ResultSet pk = ps.getGeneratedKeys();
				while(pk.next()) {
					obj.setId(pk.getInt(1));
				}
				conn.commit();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return obj;
	}

	@Override
	public User update(User obj) {
		try (Connection conn = ConnectionFactory.getInstance().getConnection()) {
			String sql = "UPDATE ACC_TYPE_TB SET TYPE = ? WHERE TYPEID = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, obj.getType());
			;
			ps.setInt(2, obj.getTypeID());
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}
}