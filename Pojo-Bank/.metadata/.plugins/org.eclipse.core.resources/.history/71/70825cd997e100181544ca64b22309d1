package com.revature.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.revature.pojos.Account;
import com.revature.util.ConnectionFactory;

public class AccDao implements DAO<Account, Integer>{
	
	@Override
	public List<Account> findAll() {
		List<Account> account = new ArrayList<Account>();
		
		try(Connection conn = ConnectionFactory.getInstance().getConnection()){
			String query = "SELECT BALANCE FROM ACCOUNT_TB WHERE USERID = ?";
			Statement statement = conn.createStatement();
			ResultSet rs = statement.executeQuery(query);
			
			while(rs.next()) {
				Account temp = new Account();
				temp.setAccID(rs.getInt(1));
				temp.setAccType(rs.getString(2));
				account.add(temp);
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return account;
	}

	@Override
	public Account findById(Integer id) {
		Account a = null;
		try(Connection conn = ConnectionFactory.getInstance().getConnection()){
			String sql = "SELECT BALANCE FROM ACCOUNT WHERE USERID = ?";
			
			PreparedStatement ps = conn.prepareStatement(sql); 
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				a = new Account();
				a.setAccID(rs.getInt(1));
				a.setAccType(rs.getString(2));
				a.setBalance(rs.getDouble(3));
				
			}
			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		return a;
	}

	@Override
	public Account save(Account obj) {
		try(Connection conn = ConnectionFactory.getInstance().getConnection()){
			conn.setAutoCommit(false);
			
			String sql = "INSERT INTO ACCOUNT_TB (NAME) VALUES(?)";
			String[] keyNames = {"ACC_ID"};
			
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, obj.getType());
			
			int numRows = ps.executeUpdate();
			if(numRows > 0) {
				ResultSet pk = ps.getGeneratedKeys();
				while(pk.next()) {
					obj.setAccID(pk.getInt(1));
				}
				conn.commit();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return obj;
	}

	@Override
	public Account update(Account obj) {
		try(Connection conn = ConnectionFactory.getInstance().getConnection()){
			String sql = "UPDATE ACCOUNT_TB SET BALANCE = ? WHERE ACC_ID = ?";
			
		}
		
		
		return null;
	}
}
